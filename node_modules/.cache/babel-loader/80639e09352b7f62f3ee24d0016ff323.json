{"ast":null,"code":"import React from'react';import{Field,reduxForm}from\"redux-form\";import{Input}from\"../FormsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{login}from\"../../redux/state/Auth_reducer\";import{Redirect}from\"react-router-dom\";import style from\"./../FormsControls/FormsControls.module.css\";var LoginForm=function LoginForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"Email\",name:\"email\",validate:[required],component:Input})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"Password\",name:\"password\",type:\"password\",validate:[required],component:Input})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{component:Input,name:\"rememberMe\",type:\"checkbox\"}),\" remember me\"),props.error&&/*#__PURE__*/React.createElement(\"div\",{className:style.formSummaryError},props.error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(LoginReduxForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.AuthData.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my-app__1/src/components/login/login.jsx"],"names":["React","Field","reduxForm","Input","required","connect","login","Redirect","style","LoginForm","props","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","AuthData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,KAAR,KAAoB,gCAApB,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,KAAoB,gCAApB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,eACI,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAE,OAApB,CAA6B,IAAI,CAAE,OAAnC,CACO,QAAQ,CAAE,CAACP,QAAD,CADjB,CAEO,SAAS,CAAED,KAFlB,EADJ,CADJ,cAMI,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAE,UAApB,CAAgC,IAAI,CAAE,UAAtC,CAAkD,IAAI,CAAE,UAAxD,CACO,QAAQ,CAAE,CAACC,QAAD,CADjB,CAEO,SAAS,CAAED,KAFlB,EADJ,CANJ,cAWI,4CACI,oBAAC,KAAD,EAAO,SAAS,CAAEA,KAAlB,CAAyB,IAAI,CAAE,YAA/B,CAA6C,IAAI,CAAE,UAAnD,EADJ,gBAXJ,CAcMO,KAAK,CAACE,KAAN,eAAe,2BAAK,SAAS,CAAEJ,KAAK,CAACK,gBAAtB,EACZH,KAAK,CAACE,KADM,CAdrB,cAkBI,4CACI,0CADJ,CAlBJ,CADJ,CAwBH,CAzBD,CA2BA,GAAME,CAAAA,cAAc,CAAIZ,SAAS,CAAC,CAACa,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BN,SAA3B,CAAxB,CAEA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACN,KAAD,CAAW,CACrB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BR,KAAK,CAACJ,KAAN,CAAYY,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIX,KAAK,CAACY,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBAAO,4CACH,sCADG,cAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFG,CAAP,CAKH,CAZD,CAaA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,QAAN,CAAeH,MADS,CAAZ,EAAxB,CAGA,cAAejB,CAAAA,OAAO,CAACkB,eAAD,CAAkB,CAACjB,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAmCU,KAAnC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/state/Auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../FormsControls/FormsControls.module.css\";\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.AuthData.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login} )(Login);"]},"metadata":{},"sourceType":"module"}